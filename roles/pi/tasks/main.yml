---

- name: "Setting hostname to 'pihole'"
  hostname:
    name: pihole
  tags: admin

- name: 'Disable WIFI, Bluetooth, and IPv6'
  copy: src=./files/raspi-blacklist.conf dest=/etc/modprobe.d/raspi-blacklist.conf mode=0600
  tags: admin

- name: 'Set default bash aliases'
  copy: src=./files/etc_profile.d_bash_aliases.sh dest=/etc/profile.d/bash_aliases.sh mode=0600
  tags: admin

- name: 'Update APT package cache'
  apt:
    update_cache: yes
    upgrade: safe
  tags: admin

#- name: Install admin tools (vim, htop, ntop, nmap)
#  apt:
#    package: "['python-pip', 'vim', 'htop', 'nmap', 'atop']"
#    state: present
#  tags: admin

- name: Install grin (better grep)
  shell: pip install grin
  tags: admin

- name: Install NTP
  apt:
    package: ntp
    state: present
  tags: ntp

- name: Copy over the NTP configuration
  template: src=files/ntp.conf dest=/etc/ntp.conf
  notify:
    - restart ntp
    - force ntp update
  tags: ntp

- name: Make sure NTP is started up
  service: name=ntp state=started enabled=yes
  tags: ntp

- name: "Download Pi-Hole installer"
  get_url:
      url: https://install.pi-hole.net
      dest: ~/install-pihole.sh
      mode: 0740
  tags: pihole

- name: Create pihole user
  user:
    create_home: no
    home: "{{ fspath_pihole_config }}"
    name: "{{ user_pihole }}"
    shell: /bin/bash
    state: present
    system: yes

- name: Create pihole configuration directory
  become: True
  file:
    name="{{ fspath_pihole_config }}"
    state=directory
    owner="{{ user_pihole }}"
    group="{{ group_pihole }}"
    mode=0755
  tags: pihole

- name: Create pihole configuration
  become: True
  template:
    src="setupVars.conf.j2"
    dest="{{ fspath_pihole_config }}/setupVars.conf"
    owner=root
    group=root
    mode=0644
  tags: pihole

#- name: Set static IP configuration
#  become: True
#  template:
#    src="etc_network_interfaces.j2"
#    dest="/etc/network/interfaces"
#    owner=root
#    group=root
#    mode=0644
#  tags: pihole

- name: Set default DNS
  become: True
  template:
    src="etc_resolf.conf.j2"
    dest="/etc/resolv.conf"
    owner=root
    group=root
    mode=0644
  tags: admin

- name: Install Pi-Hole
  shell: "~/install-pihole.sh --unattended"
  register: dbg_install_pihole
  tags: pihole

#- name: Set static IP configuration
#  become: True
#  template:
#    src="etc_network_interfaces.j2"
#    dest="/etc/network/interfaces"
#    owner=root
#    group=root
#    mode=0644
#  tags: admin

- name: Set PiHole to update every week
  become: True
  replace:
    path: /etc/cron.d/pihole
    regexp: '^#(.*updatePihole.*)$'
    replace: '\1'
    backup: yes
  tags: admin

- name: 'Reboot'
  shell: sleep 2 && reboot
  async: 1
  poll: 0
  ignore_errors: true
  tags: pihole

- name: "Wait for Raspberry PI to come back"
  local_action: wait_for host={{ ansible_host }} port=22 state=started delay=10
  become: false
